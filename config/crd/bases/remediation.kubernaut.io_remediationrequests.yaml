---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: remediationrequests.remediation.kubernaut.io
spec:
  group: remediation.kubernaut.io
  names:
    kind: RemediationRequest
    listKind: RemediationRequestList
    plural: remediationrequests
    singular: remediationrequest
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RemediationRequest is the Schema for the remediationrequests
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RemediationRequestSpec defines the desired state of RemediationRequest.
            properties:
              affectedResources:
                description: |-
                  List of affected resources in an aggregated storm (e.g., "namespace:Pod:name")
                  Only populated for aggregated storm CRDs
                items:
                  type: string
                type: array
              deduplication:
                description: |-
                  Deduplication Metadata
                  Tracking information for duplicate signal suppression
                properties:
                  firstSeen:
                    description: Timestamp when this signal fingerprint was first
                      seen
                    format: date-time
                    type: string
                  isDuplicate:
                    description: True if this signal is a duplicate of an active remediation
                    type: boolean
                  lastSeen:
                    description: Timestamp when this signal fingerprint was last seen
                    format: date-time
                    type: string
                  occurrenceCount:
                    description: Total count of occurrences of this signal
                    type: integer
                  previousRemediationRequestRef:
                    description: Reference to previous RemediationRequest CRD (if
                      duplicate)
                    type: string
                required:
                - firstSeen
                - isDuplicate
                - lastSeen
                - occurrenceCount
                type: object
              environment:
                description: |-
                  Environment: dynamically configured via namespace labels
                  Accepts any non-empty string to support custom environment taxonomies
                  (e.g., "production", "staging", "development", "canary", "qa-eu", "blue", "green", etc.)
                maxLength: 63
                minLength: 1
                type: string
              firingTime:
                description: |-
                  Temporal Data
                  When the signal first started firing (from upstream source)
                format: date-time
                type: string
              isStorm:
                description: |-
                  Storm Detection
                  True if this signal is part of a detected alert storm
                type: boolean
              originalPayload:
                description: |-
                  Complete original webhook payload for debugging and audit
                  Stored as []byte to preserve exact format
                format: byte
                type: string
              priority:
                description: |-
                  Priority assigned by Gateway (P0=critical, P1=high, P2=normal, P3=low)
                  Used by downstream Rego policies for remediation decisions
                enum:
                - P0
                - P1
                - P2
                - P3
                pattern: ^P[0-3]$
                type: string
              providerData:
                description: |-
                  Provider-specific fields in raw JSON format
                  Gateway adapter populates this based on signal source
                  Controllers parse this based on targetType/signalType

                  For Kubernetes (targetType="kubernetes"):
                    {"namespace": "...", "resource": {"kind": "...", "name": "..."}, "alertmanagerURL": "...", ...}

                  For AWS (targetType="aws"):
                    {"region": "...", "accountId": "...", "instanceId": "...", "resourceType": "...", ...}

                  For Datadog (targetType="datadog"):
                    {"monitorId": 123, "host": "...", "tags": [...], "metricQuery": "...", ...}
                format: byte
                type: string
              receivedTime:
                description: When Gateway received the signal
                format: date-time
                type: string
              severity:
                description: |-
                  Signal Classification
                  Severity level: "critical", "warning", "info"
                enum:
                - critical
                - warning
                - info
                type: string
              signalAnnotations:
                additionalProperties:
                  type: string
                type: object
              signalFingerprint:
                description: |-
                  Core Signal Identification
                  Unique fingerprint for deduplication (SHA256 of alert/event key fields)
                maxLength: 64
                pattern: ^[a-f0-9]{64}$
                type: string
              signalLabels:
                additionalProperties:
                  type: string
                description: |-
                  ========================================
                  SIGNAL METADATA (PHASE 1 ADDITION)
                  ========================================
                  Signal labels and annotations extracted from provider-specific data
                  These are populated by Gateway Service after parsing providerData
                type: object
              signalName:
                description: Human-readable signal name (e.g., "HighMemoryUsage",
                  "CrashLoopBackOff")
                maxLength: 253
                type: string
              signalSource:
                description: Adapter that ingested the signal (e.g., "prometheus-adapter",
                  "k8s-event-adapter")
                maxLength: 63
                type: string
              signalType:
                description: |-
                  Signal type: "prometheus", "kubernetes-event", "aws-cloudwatch", "datadog-monitor", etc.
                  Used for signal-aware remediation strategies
                type: string
              stormAlertCount:
                description: Number of alerts in the storm
                type: integer
              stormType:
                description: 'Storm type: "rate" (frequency-based) or "pattern" (similar
                  alerts)'
                type: string
              stormWindow:
                description: Time window for storm detection (e.g., "5m")
                type: string
              targetType:
                description: |-
                  Target system type: "kubernetes", "aws", "azure", "gcp", "datadog"
                  Indicates which infrastructure system the signal targets
                enum:
                - kubernetes
                - aws
                - azure
                - gcp
                - datadog
                type: string
              timeoutConfig:
                description: Optional timeout overrides for this specific remediation
                properties:
                  aiAnalysisTimeout:
                    description: 'Timeout for AIAnalysis phase (default: 10m)'
                    type: string
                  overallWorkflowTimeout:
                    description: 'Overall workflow timeout (default: 1h)'
                    type: string
                  remediationProcessingTimeout:
                    description: 'Timeout for RemediationProcessing phase (default:
                      5m)'
                    type: string
                  workflowExecutionTimeout:
                    description: 'Timeout for WorkflowExecution phase (default: 20m)'
                    type: string
                type: object
            required:
            - deduplication
            - environment
            - firingTime
            - priority
            - receivedTime
            - severity
            - signalFingerprint
            - signalName
            - signalType
            - targetType
            type: object
          status:
            description: RemediationRequestStatus defines the observed state of RemediationRequest.
            properties:
              aiAnalysisRef:
                description: ObjectReference contains enough information to let you
                  inspect or modify the referred object.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              approvalNotificationSent:
                description: |-
                  Approval notification tracking (BR-ORCH-001)
                  Prevents duplicate notifications when AIAnalysis requires approval
                type: boolean
              completedAt:
                format: date-time
                type: string
              overallPhase:
                description: Phase tracking for orchestration
                type: string
              remediationProcessingRef:
                description: References to downstream CRDs
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              startTime:
                description: Timestamps
                format: date-time
                type: string
              workflowExecutionRef:
                description: ObjectReference contains enough information to let you
                  inspect or modify the referred object.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
