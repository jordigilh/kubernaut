apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubernaut-integration
  namespace: e2e-test
  labels:
    app.kubernetes.io/name: kubernaut
    app.kubernetes.io/component: integration-test
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubernaut
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubernaut
        app.kubernetes.io/component: integration-test
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: kubernaut-mock
        image: nginx:alpine
        ports:
        - name: webhook
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        command: ["/bin/sh"]
        args:
        - -c
        - |
          # Create mock webhook and metrics endpoints for integration testing
          mkdir -p /usr/share/nginx/html

          # Mock webhook endpoint
          cat > /usr/share/nginx/html/alerts.html << 'EOF'
          {
            "status": "success",
            "message": "Alert received by kubernaut integration test service"
          }
          EOF

          # Mock metrics endpoint with Prometheus format
          cat > /usr/share/nginx/html/metrics.html << 'EOF'
          # HELP kubernaut_alerts_total Total number of alerts processed
          # TYPE kubernaut_alerts_total counter
          kubernaut_alerts_total{status="success"} 42

          # HELP kubernaut_response_duration_seconds Time spent processing alerts
          # TYPE kubernaut_response_duration_seconds histogram
          kubernaut_response_duration_seconds_bucket{le="0.5"} 1
          kubernaut_response_duration_seconds_bucket{le="1.0"} 2
          kubernaut_response_duration_seconds_bucket{le="+Inf"} 2
          kubernaut_response_duration_seconds_sum 0.8
          kubernaut_response_duration_seconds_count 2

          # HELP kubernaut_health_status Health status of kubernaut service
          # TYPE kubernaut_health_status gauge
          kubernaut_health_status{component="webhook"} 1
          kubernaut_health_status{component="llm"} 1
          kubernaut_health_status{component="database"} 1
          EOF

          # Configure nginx for both endpoints
          cat > /etc/nginx/conf.d/default.conf << 'EOF'
          server {
              listen 8080;
              location /alerts {
                  add_header Content-Type application/json;
                  alias /usr/share/nginx/html/alerts.html;
              }
              location /health {
                  add_header Content-Type application/json;
                  return 200 '{"status":"healthy","service":"kubernaut-integration"}';
              }
          }

          server {
              listen 9090;
              location /metrics {
                  add_header Content-Type text/plain;
                  alias /usr/share/nginx/html/metrics.html;
              }
          }
          EOF

          # Start nginx
          nginx -g 'daemon off;'
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: kubernaut-service
  namespace: e2e-test
  labels:
    app.kubernetes.io/name: kubernaut
    app.kubernetes.io/component: integration-test
spec:
  selector:
    app.kubernetes.io/name: kubernaut
  ports:
  - name: webhook
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP
  type: ClusterIP
