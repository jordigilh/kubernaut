version: '3.8'

services:
  ollama:
    image: ollama/ollama:latest
    container_name: ollama-integration
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
      - ./scripts:/scripts
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_ORIGINS=*
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    command: >
      bash -c "
        echo 'Starting Ollama server...'
        ollama serve &
        OLLAMA_PID=$$!

        echo 'Waiting for Ollama to be ready...'
        sleep 15

        echo 'Pulling Granite model...'
        ollama pull granite3.1-dense:8b

        echo 'Model pulled successfully, keeping server running...'
        wait $$OLLAMA_PID
      "
    networks:
      - integration-net

  test-runner:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: integration-test-runner
    depends_on:
      ollama:
        condition: service_healthy
    environment:
      - LLM_ENDPOINT=http://ollama:11434
      - LLM_MODEL=granite3.1-dense:8b
      - LLM_PROVIDER=ollama
      - TEST_TIMEOUT=120s
      - LOG_LEVEL=debug
      - GO_TEST_TAGS=integration
      - CGO_ENABLED=0
    volumes:
      - ./:/app
      - go_mod_cache:/go/pkg/mod
      - go_build_cache:/root/.cache/go-build
    working_dir: /app
    command: >
      bash -c "
        echo 'Waiting for Ollama to be ready...'
        until curl -f http://ollama:11434/api/tags; do
          echo 'Ollama not ready, waiting...'
          sleep 5
        done

        echo 'Verifying Granite model is available...'
        until curl -s http://ollama:11434/api/tags | grep -q 'granite3.1-dense:8b'; do
          echo 'Granite model not available, waiting...'
          sleep 10
        done

        echo 'Running integration tests...'
        go test -v -tags=integration ./test/integration/... -timeout=30m -count=1
      "
    networks:
      - integration-net

  # Optional: Prometheus for monitoring test performance
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: prometheus-integration
    ports:
      - "9090:9090"
    volumes:
      - ./test/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=1h'
      - '--web.enable-lifecycle'
    networks:
      - integration-net
    profiles:
      - monitoring

volumes:
  ollama_data:
    driver: local
  go_mod_cache:
    driver: local
  go_build_cache:
    driver: local

networks:
  integration-net:
    driver: bridge