# Kubernaut Context API Deployment for HolmesGPT Integration
# This deploys the Context API that HolmesGPT will use via custom toolset

apiVersion: apps/v1
kind: Deployment
metadata:
  name: context-api
  namespace: kubernaut-system
  labels:
    app: context-api
    component: context-api
    tier: backend
spec:
  replicas: 2  # High availability for production
  selector:
    matchLabels:
      app: context-api
  template:
    metadata:
      labels:
        app: context-api
        component: context-api
        tier: backend
    spec:
      serviceAccountName: context-api
      containers:
      - name: context-api
        image: kubernaut/context-api:latest  # Replace with actual image
        ports:
        - containerPort: 8091
          name: http
        env:
        - name: LOG_LEVEL
          value: "info"
        - name: CACHE_TTL_DEFAULT
          value: "5m"
        - name: CACHE_TTL_MAX
          value: "10m"
        - name: PROMETHEUS_ENDPOINT
          value: "http://prometheus:9090"
        # PostgreSQL connection
        - name: DB_HOST
          value: "postgres.kubernaut-system.svc.cluster.local"
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: "action_history"
        - name: DB_USER
          value: "slm_user"
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: context-api-db-secret
              key: password
        - name: DB_SSLMODE
          value: "disable"
        # Redis connection
        - name: REDIS_ADDR
          value: "redis.kubernaut-system.svc.cluster.local:6379"
        - name: REDIS_DB
          value: "0"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8091
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8091
          initialDelaySeconds: 5
          periodSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL

---
apiVersion: v1
kind: Service
metadata:
  name: context-api
  namespace: kubernaut-system
  labels:
    app: context-api
    component: context-api
spec:
  selector:
    app: context-api
  ports:
  - port: 8091
    targetPort: 8091
    protocol: TCP
    name: http
  type: ClusterIP

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: context-api
  namespace: kubernaut-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: context-api
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints", "nodes", "namespaces"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["pods", "nodes"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: context-api
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: context-api
subjects:
- kind: ServiceAccount
  name: context-api
  namespace: kubernaut-system
