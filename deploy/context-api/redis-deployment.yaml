# Redis for Context API
# Namespace: kubernaut-system (production)
# Used for: L1 cache in multi-tier caching strategy

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: kubernaut-system
  labels:
    app: redis
    component: cache
    part-of: kubernaut
data:
  redis.conf: |
    # Redis Configuration for Context API L1 Cache
    # Network
    bind 0.0.0.0
    protected-mode no
    port 6379
    tcp-backlog 511
    timeout 0
    tcp-keepalive 300

    # General
    daemonize no
    supervised no
    pidfile /var/run/redis_6379.pid
    loglevel notice
    logfile ""
    # Support 16 databases for test isolation
    databases 16

    # Snapshotting (persistence)
    # Save after 900 seconds if at least 1 key changed
    save 900 1
    # Save after 300 seconds if at least 10 keys changed
    save 300 10
    # Save after 60 seconds if at least 10000 keys changed
    save 60 10000
    stop-writes-on-bgsave-error yes
    rdbcompression yes
    rdbchecksum yes
    dbfilename dump.rdb
    dir /data

    # Replication
    replica-serve-stale-data yes
    replica-read-only yes
    repl-diskless-sync no
    repl-diskless-sync-delay 5
    repl-disable-tcp-nodelay no

    # Security
    # requirepass CHANGE_ME_IN_PRODUCTION  # Uncomment and set password for production

    # Limits
    maxclients 10000
    maxmemory 512mb
    # LRU eviction when memory limit reached
    maxmemory-policy allkeys-lru

    # Append Only File (AOF) persistence
    appendonly no
    appendfilename "appendonly.aof"
    appendfsync everysec
    no-appendfsync-on-rewrite no
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb

    # Slow log
    slowlog-log-slower-than 10000
    slowlog-max-len 128

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: kubernaut-system
  labels:
    app: redis
    component: cache
    part-of: kubernaut
    version: "7"
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
        component: cache
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6379
          name: redis
          protocol: TCP
        command:
        - redis-server
        - /usr/local/etc/redis/redis.conf
        volumeMounts:
        - name: redis-config
          mountPath: /usr/local/etc/redis
          readOnly: true
        - name: redis-data
          mountPath: /data
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: redis-config
        configMap:
          name: redis-config
          items:
          - key: redis.conf
            path: redis.conf
      - name: redis-data
        emptyDir: {}  # For development; use PVC for production
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: kubernaut-system
  labels:
    app: redis
    component: cache
    part-of: kubernaut
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
    name: redis
  selector:
    app: redis

