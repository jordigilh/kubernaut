{
  "kubernetes_action_categories": [
    {
      "category": "Pod Management",
      "actions": [
        {
          "action_type": "delete_pod",
          "kubectl_equivalent": "kubectl delete pod",
          "test_scenario": "restart_unresponsive_pod",
          "expected_outcome": "pod_deleted_and_recreated"
        },
        {
          "action_type": "describe_pod",
          "kubectl_equivalent": "kubectl describe pod",
          "test_scenario": "investigate_pod_issues",
          "expected_outcome": "detailed_pod_information"
        },
        {
          "action_type": "get_pod_logs",
          "kubectl_equivalent": "kubectl logs",
          "test_scenario": "analyze_pod_failures",
          "expected_outcome": "pod_logs_retrieved"
        },
        {
          "action_type": "exec_pod_command",
          "kubectl_equivalent": "kubectl exec",
          "test_scenario": "debug_inside_pod",
          "expected_outcome": "command_executed_in_pod"
        }
      ]
    },
    {
      "category": "Deployment Management",
      "actions": [
        {
          "action_type": "scale_deployment",
          "kubectl_equivalent": "kubectl scale deployment",
          "test_scenario": "adjust_replica_count",
          "expected_outcome": "deployment_scaled"
        },
        {
          "action_type": "rollout_restart_deployment",
          "kubectl_equivalent": "kubectl rollout restart",
          "test_scenario": "restart_deployment_pods",
          "expected_outcome": "deployment_restarted"
        },
        {
          "action_type": "rollout_status_deployment",
          "kubectl_equivalent": "kubectl rollout status",
          "test_scenario": "check_rollout_progress",
          "expected_outcome": "rollout_status_retrieved"
        },
        {
          "action_type": "patch_deployment",
          "kubectl_equivalent": "kubectl patch deployment",
          "test_scenario": "update_deployment_resources",
          "expected_outcome": "deployment_patched"
        }
      ]
    },
    {
      "category": "Service Management",
      "actions": [
        {
          "action_type": "describe_service",
          "kubectl_equivalent": "kubectl describe service",
          "test_scenario": "investigate_service_issues",
          "expected_outcome": "service_details_retrieved"
        },
        {
          "action_type": "get_endpoints",
          "kubectl_equivalent": "kubectl get endpoints",
          "test_scenario": "check_service_endpoints",
          "expected_outcome": "endpoint_information_retrieved"
        },
        {
          "action_type": "patch_service",
          "kubectl_equivalent": "kubectl patch service",
          "test_scenario": "update_service_configuration",
          "expected_outcome": "service_patched"
        }
      ]
    },
    {
      "category": "Node Management",
      "actions": [
        {
          "action_type": "describe_node",
          "kubectl_equivalent": "kubectl describe node",
          "test_scenario": "investigate_node_issues",
          "expected_outcome": "node_details_retrieved"
        },
        {
          "action_type": "cordon_node",
          "kubectl_equivalent": "kubectl cordon",
          "test_scenario": "prevent_scheduling_on_node",
          "expected_outcome": "node_cordoned"
        },
        {
          "action_type": "uncordon_node",
          "kubectl_equivalent": "kubectl uncordon",
          "test_scenario": "enable_scheduling_on_node",
          "expected_outcome": "node_uncordoned"
        },
        {
          "action_type": "drain_node",
          "kubectl_equivalent": "kubectl drain",
          "test_scenario": "safely_evacuate_node",
          "expected_outcome": "node_drained"
        }
      ]
    },
    {
      "category": "Resource Investigation",
      "actions": [
        {
          "action_type": "get_events",
          "kubectl_equivalent": "kubectl get events",
          "test_scenario": "investigate_cluster_events",
          "expected_outcome": "events_retrieved"
        },
        {
          "action_type": "top_nodes",
          "kubectl_equivalent": "kubectl top nodes",
          "test_scenario": "check_node_resource_usage",
          "expected_outcome": "node_metrics_retrieved"
        },
        {
          "action_type": "top_pods",
          "kubectl_equivalent": "kubectl top pods",
          "test_scenario": "check_pod_resource_usage",
          "expected_outcome": "pod_metrics_retrieved"
        }
      ]
    },
    {
      "category": "ConfigMap and Secret Management",
      "actions": [
        {
          "action_type": "describe_configmap",
          "kubectl_equivalent": "kubectl describe configmap",
          "test_scenario": "investigate_configuration_issues",
          "expected_outcome": "configmap_details_retrieved"
        },
        {
          "action_type": "patch_configmap",
          "kubectl_equivalent": "kubectl patch configmap",
          "test_scenario": "update_configuration",
          "expected_outcome": "configmap_patched"
        },
        {
          "action_type": "describe_secret",
          "kubectl_equivalent": "kubectl describe secret",
          "test_scenario": "investigate_secret_issues",
          "expected_outcome": "secret_details_retrieved"
        }
      ]
    },
    {
      "category": "Namespace Management",
      "actions": [
        {
          "action_type": "describe_namespace",
          "kubectl_equivalent": "kubectl describe namespace",
          "test_scenario": "investigate_namespace_issues",
          "expected_outcome": "namespace_details_retrieved"
        },
        {
          "action_type": "get_namespace_resources",
          "kubectl_equivalent": "kubectl get all -n",
          "test_scenario": "list_namespace_resources",
          "expected_outcome": "namespace_resources_listed"
        }
      ]
    },
    {
      "category": "Storage Management",
      "actions": [
        {
          "action_type": "describe_persistentvolume",
          "kubectl_equivalent": "kubectl describe pv",
          "test_scenario": "investigate_storage_issues",
          "expected_outcome": "pv_details_retrieved"
        },
        {
          "action_type": "describe_persistentvolumeclaim",
          "kubectl_equivalent": "kubectl describe pvc",
          "test_scenario": "investigate_pvc_issues",
          "expected_outcome": "pvc_details_retrieved"
        }
      ]
    }
  ],
  "success_criteria": {
    "minimum_action_types": 25,
    "required_success_rate": 0.95,
    "maximum_acceptable_failures": 3,
    "action_timeout_seconds": 30
  }
}