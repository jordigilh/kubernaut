---
apiVersion: v1
kind: ConfigMap
metadata:
  name: data-storage-migrations
  namespace: kubernaut-system
  labels:
    app: data-storage-service
    component: database
    part-of: kubernaut
data:
  # Migration execution script
  run-migrations.sh: |
    #!/bin/bash
    set -e
    
    echo "üîç Checking PostgreSQL connection..."
    until PGPASSWORD=$DB_PASSWORD psql -h $DB_HOST -p $DB_PORT -U $DB_USER -d $DB_NAME -c '\q'; do
      echo "‚è≥ Waiting for PostgreSQL to be ready..."
      sleep 2
    done
    
    echo "‚úÖ PostgreSQL is ready"
    echo "üöÄ Running database migrations..."
    
    # Run migrations in order
    for migration in /migrations/*.sql; do
      if [ -f "$migration" ]; then
        echo "üìù Applying migration: $(basename $migration)"
        PGPASSWORD=$DB_PASSWORD psql -h $DB_HOST -p $DB_PORT -U $DB_USER -d $DB_NAME -f "$migration"
        echo "‚úÖ Migration applied: $(basename $migration)"
      fi
    done
    
    echo "üéâ All migrations applied successfully"

---
apiVersion: batch/v1
kind: Job
metadata:
  name: data-storage-schema-init
  namespace: kubernaut-system
  labels:
    app: data-storage-service
    component: database
    job-type: schema-initialization
    part-of: kubernaut
  annotations:
    description: "Initializes Data Storage Service database schema with all migrations"
spec:
  ttlSecondsAfterFinished: 300  # Auto-cleanup after 5 minutes
  backoffLimit: 3
  template:
    metadata:
      labels:
        app: data-storage-service
        component: database
        job-type: schema-initialization
    spec:
      restartPolicy: OnFailure
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: schema-init
        image: registry.redhat.io/rhel9/postgresql-15:latest
        imagePullPolicy: IfNotPresent
        env:
          - name: DB_HOST
            value: "postgres.kubernaut-system.svc.cluster.local"
          - name: DB_PORT
            value: "5432"
          - name: DB_NAME
            value: "action_history"
          - name: DB_USER
            value: "slm_user"
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-secret
                key: POSTGRES_PASSWORD
        command:
          - /bin/bash
          - /scripts/run-migrations.sh
        volumeMounts:
          - name: migrations-script
            mountPath: /scripts
            readOnly: true
          - name: migrations
            mountPath: /migrations
            readOnly: true
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 256Mi
      volumes:
        - name: migrations-script
          configMap:
            name: data-storage-migrations
            defaultMode: 0555
            items:
              - key: run-migrations.sh
                path: run-migrations.sh
        - name: migrations
          configMap:
            name: data-storage-schema-files
            defaultMode: 0444

