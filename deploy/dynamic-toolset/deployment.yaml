apiVersion: apps/v1
kind: Deployment
metadata:
  name: dynamic-toolset
  namespace: kubernaut-system
  labels:
    app: dynamic-toolset
    component: toolset-discovery
    version: v1.0
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: dynamic-toolset
  template:
    metadata:
      labels:
        app: dynamic-toolset
        component: toolset-discovery
        version: v1.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: dynamic-toolset
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: dynamic-toolset
        image: kubernaut/dynamic-toolset:v1.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: DISCOVERY_INTERVAL
          valueFrom:
            configMapKeyRef:
              name: dynamic-toolset-config
              key: discovery-interval
              optional: true
        - name: NAMESPACES
          valueFrom:
            configMapKeyRef:
              name: dynamic-toolset-config
              key: namespaces
              optional: true
        - name: LOG_LEVEL
          value: "info"
        - name: KUBECONFIG
          value: ""  # Empty for in-cluster config
        resources:
          requests:
            memory: "128Mi"
            cpu: "250m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
      nodeSelector:
        kubernetes.io/os: linux
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - dynamic-toolset
              topologyKey: kubernetes.io/hostname

