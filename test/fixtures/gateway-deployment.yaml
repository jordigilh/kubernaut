# Gateway Service Deployment for Integration Tests
#
# Deploys Gateway as a Kubernetes Deployment with Ingress routing
# This mirrors production deployment for realistic testing
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  namespace: kubernaut-test
  labels:
    app: gateway
    component: stateless
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      serviceAccountName: test-gateway-sa
      containers:
      - name: gateway
        image: kubernaut/gateway:test  # Built locally for testing
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: REDIS_ADDR
          value: "redis.kubernaut-test.svc.cluster.local:6379"
        - name: REDIS_DB
          value: "15"
        - name: LISTEN_ADDR
          value: ":8080"
        - name: RATE_LIMIT_REQUESTS_PER_MINUTE
          value: "100"
        - name: RATE_LIMIT_BURST
          value: "10"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: gateway
  namespace: kubernaut-test
  labels:
    app: gateway
spec:
  type: ClusterIP
  selector:
    app: gateway
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gateway-ingress
  namespace: kubernaut-test
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /api/v1/signals
        pathType: Prefix
        backend:
          service:
            name: gateway
            port:
              number: 8080
      - path: /health
        pathType: Exact
        backend:
          service:
            name: gateway
            port:
              number: 8080
      - path: /ready
        pathType: Exact
        backend:
          service:
            name: gateway
            port:
              number: 8080

